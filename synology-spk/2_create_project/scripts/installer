#!/bin/sh

# Package
PACKAGE="frontman"
DNAME="Frontman"

TEMP_STORAGE_DIR="${SYNOPKG_TEMP_UPGRADE_FOLDER}"
INSTALL_DIR="/usr/local/${PACKAGE}"
APP_DIR="${INSTALL_DIR}/frontman"
SSS="/var/packages/${DNAME}/scripts/start-stop-status"
PATH="${INSTALL_DIR}:${PATH}"

SERVICETOOL="/usr/syno/bin/servicetool"
FWPORTS="/var/packages/${DNAME}/scripts/${PACKAGE}.sc"

FILE_CREATE_LOG="${APP_DIR}/wizard_create_log"
LOG_FILE="/var/log/frontman.log"
PACKAGE_LOG="/var/log/synopkg.log"

preinst ()
{
    exit 0
}

postinst ()
{
    # Link
    ln -s ${SYNOPKG_PKGDEST} ${INSTALL_DIR}

    # to create log at each start 
    if [ "${wizard_create_log}" == "true" ]; then
        touch ${FILE_CREATE_LOG}
    fi

    # Add firewall config
    ${SERVICETOOL} --install-configure-file --package ${FWPORTS} >> /dev/null

    # install default config
    mkdir -p /etc/frontman
    cp -f ${APP_DIR}/frontman.default.conf /etc/frontman/frontman.conf

    # apply config values from WIZARD_UIFILES/install_uifile
    sed -i "s#CONFIG_HUB_URL#${CONFIG_HUB_URL}#g" /etc/frontman/frontman.conf
    sed -i "s#CONFIG_HUB_USER#${CONFIG_HUB_USER}#g" /etc/frontman/frontman.conf
    sed -i "s#CONFIG_HUB_PASSWORD#${CONFIG_HUB_PASSWORD}#g" /etc/frontman/frontman.conf

    mkdir -p /var/log/frontman
    chown frontman:frontman /var/log/frontman

    # allow ICMP pings
cat << EOF > /usr/local/etc/rc.d/frontman-ping.sh
#!/bin/sh
if [ \$1 = "start" ]
  then sysctl -w net.ipv4.ping_group_range="0 2147483647"
fi
EOF
    chmod 755 /usr/local/etc/rc.d/frontman-ping.sh
    sysctl -w net.ipv4.ping_group_range="0 2147483647" > /dev/null

    exit 0
}

preuninst ()
{
    # Stop the package
    ${SSS} stop > /dev/null

    # Remove firewall config
    if [ "${SYNOPKG_PKG_STATUS}" == "UNINSTALL" ]; then
        ${SERVICETOOL} --remove-configure-file --package ${PACKAGE}.sc >> /dev/null
    fi

    exit 0
}

postuninst ()
{
    # Remove link
    rm -f ${INSTALL_DIR}

    # remove log file
    rm -f ${LOG_FILE}

    # remove ICMP ping settings
    rm -f /usr/local/etc/rc.d/frontman-ping.sh

    exit 0
}

preupgrade ()
{
    # Stop the package
    ${SSS} stop > /dev/null

    ret=0
    # backup the data
    log "Backup data" ${SYNOPKG_OLD_PKGVER}
    for dir in ${APP_DIR}/*/ ; do
        logBegin "rsync ${dir%*/} to ${TEMP_STORAGE_DIR}/" ${SYNOPKG_OLD_PKGVER}
        rsync -a ${dir%*/} ${TEMP_STORAGE_DIR}/
        error_code=$?
        logEnd "rsync ${dir%*/} to ${TEMP_STORAGE_DIR}/" $error_code ${SYNOPKG_OLD_PKGVER}
        if [ ! "$error_code" -eq "0" ]; then
            $ret=1
            echo "Could not backup data $dir. Please ensure there is sufficient space." >> $SYNOPKG_TEMP_LOGFILE
        fi
    done
    if [ -f ${FILE_CREATE_LOG} ]; then
        cp -a ${FILE_CREATE_LOG} ${TEMP_STORAGE_DIR}
    fi

    exit $ret
}

postupgrade ()
{
    ret=0
    # restore the data
    log "Restore data" ${SYNOPKG_PKGVER}
    for dir in ${TEMP_STORAGE_DIR}/*/ ; do
        logBegin "rsync ${dir%*/} to ${APP_DIR}/" ${SYNOPKG_PKGVER}
        rsync -a ${dir%*/} ${APP_DIR}/
        error_code=$?
        logEnd "rsync ${dir%*/} to ${APP_DIR}/" $error_code ${SYNOPKG_PKGVER}
        if [ ! "$error_code" -eq "0" ]; then
            $ret=1
            echo "Could not restore data from $dir. " >> $SYNOPKG_TEMP_LOGFILE
        fi
    done
    if [ -f ${TEMP_STORAGE_DIR}/wizard_create_log ]; then
        logBegin "copy ${TEMP_STORAGE_DIR}/wizard_create_log to ${APP_DIR}/" ${SYNOPKG_PKGVER}
        cp -a ${TEMP_STORAGE_DIR}/wizard_create_log ${APP_DIR}/
        logEnd "copy ${TEMP_STORAGE_DIR}/wizard_create_log to ${APP_DIR}/" $? ${SYNOPKG_PKGVER}
    fi

    if [ ! "$ret" -eq "0" ]; then
        echo "Data restore failed. Please uninstall, perform new installation and restore data manually from your backup." >> $SYNOPKG_TEMP_LOGFILE
    fi

    exit $ret
}

log ()
{
    msg=$1
    version=$2
    echo "$(date +"%Y/%m/%d %T") upgrade Frontman $version $msg" >> ${PACKAGE_LOG}
}

logBegin ()
{
    msg=$1
    version=$2
    echo "$(date +"%Y/%m/%d %T") upgrade Frontman $version Begin $msg" >> ${PACKAGE_LOG}
}

logEnd ()
{
   msg=$1
   code=$2
   version=$3
   echo "$(date +"%Y/%m/%d %T") upgrade Frontman $version End $msg ret=[$code]" >> ${PACKAGE_LOG}
}
