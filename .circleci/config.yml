---
version: 2.1

orbs:
  ms-teams: cloudradar-monitoring/ms-teams@0.0.1

docker_job_setup: &docker_job
  docker:
    - image: cloudradario/go-build:0.0.17
  working_directory: /go/src/github.com/cloudradar-monitoring/frontman

attach_workspace: &workspace
  attach_workspace:
    at: /go/src/github.com/cloudradar-monitoring

common_workflow_setup: &common_workflow
  context: cloudradar
  post-steps:
    - ms-teams/report:
        only_on_fail: true
        webhook_url: $MS_TEAMS_WEBHOOK_URL

jobs:
  get-source:
    <<: *docker_job
    steps:
      - checkout
      - persist_to_workspace:
          root: /go/src/github.com/cloudradar-monitoring
          paths:
            - frontman

  test:
    <<: *docker_job
    steps:
      - <<: *workspace
      - run: make test-short

  test-goreleaser:
    <<: *docker_job
    steps:
      - <<: *workspace
      - run: make goreleaser-snapshot

  build-packages:
    <<: *docker_job
    parameters:
      release_mode:
        type: string
    environment:
      RELEASE_MODE: << parameters.release_mode >>
    steps:
      - <<: *workspace
      - run:
          name: Build binaries and pack them
          command: make goreleaser-rm-dist
      - run:
          name: Build Synology packages
          shell: /bin/bash
          command: |
            cd synology-spk && ./create_spk.sh ${CIRCLE_TAG}
      - run:
          name: Scan build artifacts with VirusTotal
          command: |
            ./scan-virustotal.sh ${VIRUSTOTAL_TOKEN} dist/frontman_${CIRCLE_TAG}_Windows_x86_64.zip &&
            ./scan-virustotal.sh ${VIRUSTOTAL_TOKEN} dist/frontman_windows_amd64/frontman.exe
      - persist_to_workspace:
          root: /go/src/github.com/cloudradar-monitoring
          paths:
            - frontman

  publish-packages:
    <<: *docker_job
    parameters:
      release_mode:
        type: string
    environment:
      RELEASE_MODE: << parameters.release_mode >>
    steps:
      - <<: *workspace
      - add_ssh_keys:
          fingerprints:
            - "53:d2:08:dc:1a:4e:9e:29:00:d4:ba:1e:b7:5d:16:25"
            - "53:8f:20:fd:32:2e:af:95:4f:3e:2b:05:2d:81:34:b1"
      - run:
          name: Publish packages
          command: .circleci/publish-packages.sh
      - run:
          name: Cleanup in case something went wrong
          command: .circleci/unpublish-packages.sh
          when: on_fail


  build-docker:
    <<: *docker_job
    steps:
      - <<: *workspace
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="18.06.3-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run: |
          docker login --username ${DOCKERHUB_USER} --password ${DOCKERHUB_PASS}
          docker build --build-arg FRONTMAN_VERSION=${CIRCLE_TAG} -t cloudradario/frontman:${CIRCLE_TAG} .
          docker push cloudradario/frontman:${CIRCLE_TAG}

workflows:
  version: 2
  test-on-commit:
    jobs:
      - get-source:
          <<: *common_workflow
          filters:
            tags:
              ignore: /.*/
      - test:
          <<: *common_workflow
          requires:
            - get-source
          filters:
            tags:
              ignore: /.*/
      - test-goreleaser:
          <<: *common_workflow
          requires:
            - get-source
          filters:
            tags:
              ignore: /.*/

  release:
    jobs:
      - get-source:
          <<: *common_workflow
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
            branches:
              ignore: /.*/
      - test:
          <<: *common_workflow
          requires:
            - get-source
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
            branches:
              ignore: /.*/
      - build-packages:
          <<: *common_workflow
          name: build-packages-release-candidate
          release_mode: release-candidate
          requires:
            - test
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.([1-9]\d*[13579]|[13579])\.(0|[1-9]\d*)$/
            branches:
              ignore: /.*/
      - build-packages:
          <<: *common_workflow
          name: build-packages-stable
          release_mode: stable
          requires:
            - test
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.([1-9]\d*[02468]|[02468])\.([1-9]\d*[02468]|[02468])$/
            branches:
              only:
                - master
      - publish-packages:
          <<: *common_workflow
          name: publish-packages-release-candidate
          release_mode: release-candidate
          requires:
            - build-packages-release-candidate
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.([1-9]\d*[13579]|[13579])\.(0|[1-9]\d*)$/
            branches:
              ignore: /.*/
      - publish-packages:
          <<: *common_workflow
          name: publish-packages-stable
          release_mode: stable
          requires:
            - build-packages-stable
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.([1-9]\d*[02468]|[02468])\.([1-9]\d*[02468]|[02468])$/
            branches:
              only:
                - master
      - build-docker:
          <<: *common_workflow
          requires:
            - publish-packages-stable
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.([1-9]\d*[02468]|[02468])\.([1-9]\d*[02468]|[02468])$/
            branches:
              only:
                - master
