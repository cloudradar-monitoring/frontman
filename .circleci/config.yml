---
version: 2
jobs:
  get-source:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - checkout
      - persist_to_workspace:
          root: /go/src/github.com/cloudradar-monitoring
          paths:
            - frontman
  
  test:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - attach_workspace:
          at: /go/src/github.com/cloudradar-monitoring
      - run: make test
  
  test-goreleaser:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - attach_workspace:
          at: /go/src/github.com/cloudradar-monitoring
      - run: make goreleaser-snapshot
  
  build-goreleaser:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - attach_workspace:
          at: /go/src/github.com/cloudradar-monitoring
      - run: make goreleaser-rm-dist

  build-docker:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - setup_remote_docker
      - run: docker build -t cloudradario/fontman:${CIRCLE_TAG} .
  
  build-aptly:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - attach_workspace:
          at: /go/src/github.com/cloudradar-monitoring
      - run: make aptly

  build-sign-msi:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - attach_workspace:
          at: /go/src/github.com/cloudradar-monitoring
      - run: make windows-sign
    
 release-github:
  docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      - run:
          name: Fetch release changelog so we can preserve it when releasing
          command: "CHANGELOGRAW=$(curl -H \"Authorization: token ${GITHUB_TOKEN}\"  https://api.github.com/repos/cloudradar-monitoring/frontman/releases | jq \".[0].body\") && echo \"export CHANGELOGRAW=$CHANGELOGRAW\" >> $BASH_ENV"
      - run:
          name: Publish release
          shell: /bin/bash
          command: |
            if [[ ${CIRCLE_TAG} =~ -{1}((0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$ ]] ; then
              echo -e ${CHANGELOGRAW} | github-release edit --user cloudradar-monitoring --repo frontman --tag ${CIRCLE_TAG} --pre-release --description -
            else
              echo -e ${CHANGELOGRAW} | github-release edit --user cloudradar-monitoring --repo frontman --tag ${CIRCLE_TAG} --description -
            fi
          when: on_success
      - run:
          name: Delete GitHub release in case something went wrong
          command: github-release delete --user cloudradar-monitoring --repo frontman --tag ${CIRCLE_TAG}
          when: on_fail

#  release-docker:

  gorelease:
    docker:
      - image: cloudradario/go-build:0.0.10
    working_directory: /go/src/github.com/cloudradar-monitoring/frontman
    steps:
      # Setup our ssh key from env var to be able to connect to Windows VM
      - run:
          name: Setup ssh key to access windows signing machine
          command: echo $WIN_SSH_KEY | base64 -d > /tmp/id_win_ssh && chmod 0600 /tmp/id_win_ssh
      - checkout
      - run:
          name: Build binaries, sign msi files and create GitHub release
          command: make ci
      - run:
          name: Fetch release changelog so we can preserve it when releasing
          command: "CHANGELOGRAW=$(curl -H \"Authorization: token ${GITHUB_TOKEN}\"  https://api.github.com/repos/cloudradar-monitoring/frontman/releases | jq \".[0].body\") && echo \"export CHANGELOGRAW=$CHANGELOGRAW\" >> $BASH_ENV"
      - run:
          name: Publish release
          shell: /bin/bash
          command: |
            if [[ ${CIRCLE_TAG} =~ -{1}((0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$ ]] ; then
              echo -e ${CHANGELOGRAW} | github-release edit --user cloudradar-monitoring --repo frontman --tag ${CIRCLE_TAG} --pre-release --description -
            else
              echo -e ${CHANGELOGRAW} | github-release edit --user cloudradar-monitoring --repo frontman --tag ${CIRCLE_TAG} --description -
            fi
          when: on_success
      - run:
          name: Delete GitHub release in case something went wrong
          command: github-release delete --user cloudradar-monitoring --repo frontman --tag ${CIRCLE_TAG}
          when: on_fail

workflows:
  version: 2
  test-on-commit:
    jobs:
      - test:
          filters:
            tags:
              ignore: /.*/
      - test-goreleaser:
          filters:
            tags:
              ignore: /.*/
  
  release:
    jobs:
      - get-source:
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - test:
          requires:
            - get-source
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - test-goreleaser:
          requires:
            - get-source
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-goreleaser:
          requires:
            - test
            - test-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-docker:
          requires:
            - build-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-aptly:
          requires:
            - build-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-sign-msi:
          requires:
            - build-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - release-github:
          requires:
            - build-docker
            - build-aptly
            - build-sign-msi
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
